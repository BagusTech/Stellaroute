"use strict";void function(e){function i(i,t){var n=i.data.wrapper;return n.trigger("gettingFiles"),t&&t.files?void n.trigger("gotFiles",[null,t]):void e.ajax({type:"GET",url:"/getFiles",dataType:"json",contentType:"application/json",data:t||{},success:function(e){n.trigger("gotFiles",[null,e])},error:function(e){n.trigger("gotFiles",[e])}})}function t(i,t){var n=i.data.wrapper,o=t||n.find('input[type="file"]').get(0).files;if(o.length>0){n.trigger("fileUploading");for(var l=new FormData,r=0;r<o.length;r++){var a=o[r];l.append("files",a,a.name)}e.ajax({url:"/upload",type:"POST",data:l,processData:!1,contentType:!1,success:function(){n.trigger("filesUploaded")},error:function(e){n.trigger("filesUploaded",[e])}})}else n.trigger("fileUploading",[!0])}function n(n,o){var l=e(n),r=o.fileUploading,a=o.filesUploaded,f=o.gettingFiles,g=o.gotFiles;r&&l.off("fileUploading").on("fileUploading",r),a&&l.off("filesUploaded").on("filesUploaded",a),f&&l.off("gettingFiles").on("gettingFiles",f),g&&l.off("gotFiles").on("gotFiles",g),l.off("uploadFiles").on("uploadFiles",{wrapper:l},t),l.off("getFiles").on("getFiles",{wrapper:l},i)}e.fn.filePicker=function(e){return this.each(function(i,t){n(t,e)})}}(jQuery.noConflict());
//# sourceMappingURL=filepicker.min.js.map
