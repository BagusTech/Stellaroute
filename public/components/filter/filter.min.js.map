{"version":3,"sources":["components/filter/filter.js"],"names":["$","getItemsToFilter","filterSections","$object","key","checkItemAgainstFilter","values","$item","itemValue","attr","types","split","indexOf","shift","filter","$itemsToFilter","e","stopPropagation","_loop","hasOwnProperty","each","i","val","push","length","item","addClass","removeClass","wrapper","$wrapper","$filters","find","$filterSections","section","fn","filterable","this","index","jQuery","noConflict"],"mappings":"iBAAA,UAAAA,GAGC,QAAAC,GAAAC,EAAAC,GAGC,IAAK,GAAMC,KAAOF,GADnBA,EAASD,eAAiBC,KACzBC,EAAAA,EAAkBD,IAAAA,EAAAA,gBAAgBE,EAAhBF,MAIjB,OAAAC,GAGD,QAAAE,GAAAD,EAAAE,EAAAC,GAGA,GAAMC,GAAYD,EAAME,KAAN,eAA0BL,EAA5C,KAAMI,EAGL,OAAO,CAGR,KAFC,GAAAE,GAAAF,EAAAG,MAAA,KAEKD,EAAQF,QAGb,GAAGF,EAAOM,QAAQF,EAAMG,YAAa,EADtC,OAAOH,CAIN,QAAA,EAGD,QAAAI,GAAAZ,EAAAa,GAGA,MAAO,UAACC,GADTA,EAAAC,kBAEED,EAAEC,YAAF,SADa,IAAAC,GAAA,SAGbH,GAGIb,EAAeiB,eAAef,KAAM,WAN3B,GAAAE,KAM2BN,GAAAA,yBAAAI,EAAA,oBAAAgB,KAAA,SAAAC,EAAAC,GAAAhB,EAAAiB,KAAAvB,EAAAsB,GAAAA,SAKlChB,EAAOkB,QAFXxB,EAAAA,OAAAA,SAAAA,EAAAA,GAAAA,MAAAK,GAAkDe,EAAKd,EAAAN,EAAAyB,MAAYC,SAAA,aANrEX,KAAAA,GAAAA,KAAeY,GAAYT,EAA3BH,IASyB,QAA2DW,GAASE,GAC1F,GAAAC,GAAA7B,EAAA4B,GAPqCE,EAAAD,EAAAE,KAAA,0BAQtCC,EAAAH,EAAAE,KAAA,yBAdW7B,IAKb,IAAA8B,EAAkB9B,OAAlB,CAYD8B,EAAAZ,KAAA,SAAAC,EAAAY,GAaC/B,EAAeF,EAAEiC,GAASxB,KAAK,4BAThC,IAAMqB,GAAWD,EAAc3B,EAA/BF,MAEA8B,GAAM5B,MAAAA,EAAiBA,EAAvBa,KAGCf,EAAAkC,GAAAC,WAAA,WACA,MAAAC,MAAAhB,KAAA,SAAAiB,EAAAT,GAaSO,EAAWP,MAInB5B,EAAE,WAAA,MAAMA,GAAE,6BAA6BmC,gBAEzCG,OAAOC","file":"filter.min.js","sourcesContent":["/*global jQuery */\r\n\r\nvoid function initCookbookFilter($){\r\n\t'use strict';\r\n\r\n\tfunction getItemsToFilter(filterSections, $object) {\t\t\r\n\t\tfor (const key in filterSections) {\r\n\t\t\tif(filterSections.hasOwnProperty(key)) {\r\n\t\t\t\t$object = $object.add($(`[data-filter-${key}]`));\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn $object;\r\n\t}\r\n\r\n\tfunction checkItemAgainstFilter(key, values, $item) {\r\n\t\tconst itemValue = $item.attr(`data-filter-${key}`);\r\n\r\n\t\tif(!itemValue) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\r\n\t\tconst types = itemValue.split('|');\r\n\r\n\t\twhile (types.length) {\r\n\t\t\tif(values.indexOf(types.shift()) !== -1) {\r\n\t\t\t\treturn false\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn true;\r\n\t}\r\n\r\n\tfunction filter(filterSections, $itemsToFilter) {\r\n\t\treturn (e) => {\r\n\t\t\te.stopPropagation();\r\n\r\n\t\t\t$itemsToFilter.removeClass('hidden');\r\n\r\n\t\t\tfor (const key in filterSections) {\r\n\t\t\t\tif(filterSections.hasOwnProperty(key)) {\r\n\t\t\t\t\tconst values = [];\r\n\r\n\t\t\t\t\t$(`[data-filter-section='${key}'] input:checked`).each((i, val) => {values.push($(val).val())});\r\n\r\n\t\t\t\t\tif (values.length) {\r\n\t\t\t\t\t\t$itemsToFilter.filter((i, item) => checkItemAgainstFilter(key, values, $(item))).addClass('hidden')\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tfunction filterable(wrapper) {\r\n\t\tconst $wrapper = $(wrapper);\r\n\t\tconst $filters = $wrapper.find('input[type=\"checkbox\"]');\r\n\t\tconst $filterSections = $wrapper.find('[data-filter-section]');\r\n\t\tconst filterSections = {};\r\n\r\n\t\tif(!$filterSections.length) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t$filterSections.each((i, section) => {\r\n\t\t\tfilterSections[$(section).attr('data-filter-section')] = [];\r\n\t\t});\r\n\r\n\t\tconst $itemsToFilter = getItemsToFilter(filterSections, $([]));\r\n\r\n\t\t$filters.click(filter(filterSections, $itemsToFilter));\r\n\t}\r\n\r\n\t$.fn.filterable = function init() {\r\n        return this.each((index, wrapper) => {\r\n            filterable(wrapper);\r\n        });\r\n    };\r\n\r\n    $(() => $('[data-function*=\"filter\"]').filterable());\r\n\r\n}(jQuery.noConflict());\r\n\r\n/*\r\n\tvoid function initializeIcon($) {\r\n\t    'use strict';\r\n\r\n\t    const addIcon = function addIcon(wrapper) {\r\n\t        const $this = $(wrapper);\r\n\t        const icon = `<i class='${$this.attr('data-icon')}' aria-hidden='true'></i>`;\r\n\r\n\t        $this.prepend(icon);\r\n\t    };\r\n\r\n\t    $.fn.addIcon = function init() {\r\n\t        return this.each((index, wrapper) => {\r\n\t            addIcon(wrapper);\r\n\t        });\r\n\t    };\r\n\r\n\t    $(() => $('[data-icon]').addIcon());\r\n\t}(jQuery.noConflict());\r\n*/"]}