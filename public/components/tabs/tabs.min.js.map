{"version":3,"sources":["components/tabs/tabs.js"],"names":["$","togglePanels","$newPanel","$oldPanel","currentId","attr","setTimeout","hash","trigger","changeTabs","$this","this","$activePanel","siblings","makeTabPanels","wrapper","$wrapper","find","$tabs","$panels","pageAnchor","each","i","tab","length","e","preventDefault","stopPropagation","currentTarget","panel","$panel","id","click","tabControls","$tabControls","isActiveControl","$anchorToClick","on","scrollTop","fn","makeTabs","index"],"mappings":"iBACK,UAAwBA,GACzB,QAAAC,GAAAC,EAAAC,GAGI,GAAMC,GAAYF,EAAUG,KAAK,KAAjCF,GAAMC,KAAAA,cAAY,QAGlBF,EAAUG,KAAK,cAAe,IAA9BH,WAAUG,WAGNH,EAAUG,KAAK,cAAe,UADlCC,IAEGJ,EAFHG,KAAA,QAKIH,EAAUG,KAAK,KAAM,IADtBH,OAAAA,SAAeK,KAAOH,EACrBF,EAAUG,KAAK,KAAMD,IAGxBF,EAAAM,QAAA,eAGJ,QAAAC,KAGG,GAAMC,GAAQV,EAAEW,KAAhB,IAAAD,EAAMA,GAAQV,yBAEXU,WACCA,GAAMF,QAAQ,cAEjB,IAAAI,GAAAF,EAAAG,SAAA,wBAEDZ,GAAMW,EAAeF,GAGxB,QAAAI,GAAAC,GAGG,GAAMC,GAAWhB,EAAEe,GADdD,EAAAA,EAAcC,KAAQ,kBACrBC,EAAWhB,EAAjBiB,KAAA,uBACMC,EAAQF,EAAAA,eAAcA,EAA5BX,KAAA,MAAcW,MACRG,EAAUH,OAASC,SAAKV,IAqD9B,IAnDMa,EAAAA,QAGFF,EAAMG,KAAK,SAACC,EAAGC,GADfL,EAAMM,GAAAA,MAAQ,SAAAC,GACRJ,EAANK,iBACMH,EAAFI,iBAEIF,IAAEE,GAAAA,EAAAA,EAAFC,cAEA,UAAMlB,EAAAA,KAAUe,mBAIff,EAAAG,SAAA,0BAAAR,KAAA,gBAAA,SAGDK,EAAML,KAAK,gBAAiB,QAA5BK,EAAML,GAAKiB,GAAAd,QAAA,mBAKtBW,EAAAE,KAAA,SAAAC,EAAAO,GAGG,GAAMC,GAAS9B,EAAE6B,GADbR,EAAKS,EAAAzB,KAAIwB,KAEbC,GAAMC,GAAKD,aAAYrB,GAEvBqB,GAIC9B,EAAAA,YAAA+B,EAAA,MAAAC,MAAA,SAAAP,GAGGA,EAAEC,iBADN1B,EAAAA,kBAEIyB,EAAEE,KAAAA,SAAAA,EAAFM,GAGI,GAAMC,GAAelC,EAAEiC,GADjBZ,EAAKa,EAAID,KAAJ,YAAoBF,EAApB,MACLG,EAAiBD,EAAvBT,OAAA,CAEAW,KAGID,EAAajB,KAAK,gBAAgBZ,KAAK,gBAAiB,SADzD8B,EAAAA,KAAH,gBAAoB,WAIvBL,EATDtB,QAAA,kBAeRY,EAAA,CAIC,GAAAgB,GAAApC,EAAAA,kCAAAoB,EAAA,KAEDgB,GAAMA,SAGFA,EAAeJ,QAAfI,EAAAA,QAAAA,GAAAA,OAAA,WAGI9B,WAAW,WADfN,EAAUqC,SAAVC,UAAqB,IACjBhC,OAKXN,EAAAuC,GAAAC,SAAA,WAGG,MAAO7B,MAAKU,KAAK,SAACoB,EAAO1B,GADxByB,GAALxB,GAAyBwB,EAAAA,EAEjB1B,GAAME,GAENF,EAAAA,QAAcE,uBAOtBhB,EAAE,WADFA,EAAA,2BAAAwC,cAEIxC,OAAAA","file":"tabs.min.js","sourcesContent":["/*global jQuery */\r\nvoid function initializeTabs($) {\r\n    'use strict';\r\n\r\n    function togglePanels($newPanel, $oldPanel) {\r\n        const currentId = $newPanel.attr('id');\r\n\r\n        $oldPanel.attr('aria-hidden', 'true');\r\n        $newPanel.attr('aria-hidden', ''); // for animation purposes\r\n\r\n        setTimeout(() => {\r\n            $newPanel.attr('aria-hidden', 'false');            \r\n        }, 10);\r\n\r\n        if($newPanel.attr('id')) {\r\n            $newPanel.attr('id', '');\r\n            window.location.hash = currentId;\r\n            $newPanel.attr('id', currentId);\r\n        }\r\n\r\n        $newPanel.trigger('tab-changed');\r\n    }\r\n\r\n    function changeTabs(){\r\n        const $this = $(this);\r\n\r\n        if($this.is('[aria-hidden=\"false\"]')){\r\n            $this.trigger('tab-changed');\r\n            return;\r\n        }\r\n\r\n        const $activePanel = $this.siblings('[aria-hidden=\"false\"]');\r\n\r\n        togglePanels($this, $activePanel);\r\n    }\r\n\r\n    function makeTabPanels(wrapper){\r\n        const $wrapper = $(wrapper);\r\n        const $tabs = $wrapper.find('> [role=\"tab\"]');\r\n        const $panels = $wrapper.find('> [role=\"tabpanel\"]');\r\n        const $controls = $(`[data-tabs=\"${$wrapper.attr('id')}\"]`);\r\n        const pageAnchor = window.location.hash;\r\n\r\n        if ($tabs.length) {\r\n            $tabs.each((i, tab) => {\r\n                $(tab).click((e) => {\r\n                    e.preventDefault();\r\n                    e.stopPropagation();\r\n\r\n                    const $this = $(e.currentTarget);\r\n\r\n                    if ($this.attr('aria-expanded') === 'true') {\r\n                        return;\r\n                    }\r\n\r\n                    $this.siblings('[aria-expanded=\"true\"]').attr('aria-expanded', 'false');\r\n                    $this.attr('aria-expanded', 'true');\r\n\r\n                    $panels.eq(i).trigger('tab-change');\r\n                });\r\n            });\r\n        }\r\n\r\n        $panels.each((i, panel) => {\r\n            const $panel = $(panel);\r\n            const id = $panel.attr('id');\r\n\r\n            $panel.on('tab-change', changeTabs);\r\n\r\n            if(!id){\r\n                return;\r\n            }\r\n\r\n            $(`a[href=\"#${id}\"]`).click((e) => {\r\n                e.preventDefault();\r\n                e.stopPropagation();\r\n\r\n                $controls.each((j, tabControls) => {\r\n                    const $tabControls = $(tabControls);\r\n                    const $activeTab = $tabControls.find(`a[href=\"#${id}\"]`);\r\n                    const isActiveControl = $activeTab.length > 0;\r\n\r\n                    if(isActiveControl) {\r\n                        $tabControls.find('[role=\"tab\"]').attr('aria-expanded', 'false');\r\n                        $activeTab.attr('aria-expanded', 'true');\r\n                    }\r\n                });\r\n\r\n                $panel.trigger('tab-change');\r\n            });\r\n        });\r\n\r\n        // open to current tab on load\r\n        // if there isn't a page anchor, end here\r\n        if (!pageAnchor) {\r\n            return;\r\n        }\r\n\r\n        const $anchorToClick = $(`[data-tabs=\"controls\"] a[href=\"${pageAnchor}\"]`);\r\n\r\n        if($anchorToClick.length){\r\n            $anchorToClick.click();\r\n\r\n            $(window).on('load', () => {\r\n                setTimeout(() => {\r\n                    $('#Body').scrollTop(0);\r\n                }, 1)\r\n            })\r\n        }\r\n    }\r\n\r\n    $.fn.makeTabs = function makeTabs() {\r\n        return this.each((index, wrapper) => {\r\n            const $wrapper = $(wrapper);\r\n\r\n            makeTabPanels($wrapper);\r\n\r\n            $wrapper.trigger('tabs-initialized');\r\n        });\r\n    };\r\n\r\n    // initialize default tabs\r\n    $(() => {\r\n        $('[data-function*=\"tabs\"]').makeTabs();\r\n    });\r\n}(jQuery.noConflict());"]}