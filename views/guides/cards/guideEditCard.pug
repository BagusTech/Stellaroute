- const tagBackgroundColor = tagBackground(card.type);

.guide-card(class= `guide-card__${card.type}`, duck-type='object', data-position=`${i+1}.${j}`)
	.duck-view-hidden.mt-XXl(data-sort-buttons)
		h2= card.title || card.tagTitle || `${card.type} Card`
		| Move Card&nbsp;
		button.btn.btn-default(data-sort='up') Up
		button.btn.btn-default(data-sort='down') Down

	if card.directionsTo && card.directionsTo[0] && card.directionsTo && (card.directionsTo[0].distance || card.directionsTo[0].time)
			.duck-edit-hidden
				each directionTo in card.directionsTo ? card.directionsTo : []
					if directionTo.time || directionTo.distance
						.guide-card--directions
							span.directions--method(data-icon= getIcon(directionTo.method)): span.sr-only= directionTo.method
							span.directions--time= directionTo.time
							
							if directionTo.distance
								span.directions--distance= `// ${directionTo.distance}`
	.duck-view-hidden.mb-Md(duck-field='directionsTo', duck-type='array')
		h3 Directions to #{card.title}
		.col-xs-3: label Method
		.col-xs-3: label Time
		.col-xs-3: label Distance
		div
			each directionTo in card.directionsTo ? card.directionsTo : [{}]
				.clear.m-0(duck-type='object')
					.form-group.col-xs-3(duck-field='method', duck-type='select')
						select.form-control(duck-value)
							option(value='walk', selected= directionTo.method === 'walk') Walking
							option(value='car', selected= directionTo.method === 'car') Car or Taxi
							option(value='bicycle', selected= directionTo.method === 'bicycle') Bicycle
							option(value='subway', selected= directionTo.method === 'subway') Subway
							option(value='train', selected= directionTo.method === 'train') Train
							option(value='plane', selected= directionTo.method === 'plane') Plane
							option(value='bus', selected= directionTo.method === 'bus') Bus
							option(value='boat', selected= directionTo.method === 'boat') Boat
					.form-group.col-xs-3(duck-field='time', duck-type='string')
						input.form-control(type='text', duck-value, value= directionTo.time, placeholder='Time')
					.form-group.col-xs-3(duck-field='distance', duck-type='string')
						input.form-control(type='text', duck-value, value= directionTo.distance, placeholder='Distance')
					.col-xs-3
						button.btn.btn-danger.w-100(duck-button='delete') Delete Direction

		.ta-R
			button.btn.btn-primary(duck-button='add') Add Directions

	.guide-card--content
		.duck-edit-hidden
			if tagBackgroundColor && card.tagTitle
				.guide-card--tag(class= tagBackgroundColor)= card.tagTitle

			if card.image
				.guide-card--img-wrapper(style= card.type === 'sub' && `background-image: url('${card.image}');`)
					if card.type !== 'sub'
						img.guide-card--img(src= card.image, title= card.title || card.type)

			.guide-card--info
				if card.title
					h2.guide-card--header.duck-edit-hidden= card.title

				if wysiwygHasData(card.description)
					.guide-card--description.duck-edit-hidden!= card.description

				if card.suggestedTime
					.guide-card--suggested-time.duck-edit-hidden
						| Suggested Time:&nbsp;


		.duck-view-hidden.p-Sm.ta-L
			.row
				.col-xs-12.col-sm-6
					.form-group.bg-N.m-0(duck-field='type', duck-type='select')
						label Card Type
						select.form-control(duck-value)
							option(selected= card.type === 'food', value='food') Food
							option(selected= card.type === 'area', value='area') Area Attraction
							option(selected= card.type === 'sub', value='sub') Sub Attraction
							option(selected= card.type === 'attraction', value='attraction') Attraction
							option(selected= card.type === 'location', value='location') Location (City/Country)
							option(selected= card.type === 'activity', value='activity') Activity (Event/Explore)
							option(selected= card.type === 'note', value='note') Note (or Advice)
							option(selected= card.type === 'map', value='map') Map
							option(selected= card.type === 'separator', value='separator') Separator
				.col-xs-12.col-sm-6
					.form-group.bg-N.m-0(duck-field='tagTitle', duck-type='string')
						label Tag Title (if card Type shows tags)
						input.form-control(type='text', duck-value, value= card.tagTitle)

		
				.col-xs-12
					h3.ta-C.mtb-Md Link Card to Existing Attraction/Location

				.col-xs-12.col-sm-6
					.form-group(duck-field='table', duck-type='select')
						label Existing Item Type (only use if you are linking to another, existing location/attraction)
							select.form-control(duck-value)
								option(selected= card.table === 'Attractions', value='Attractions') Attractions
								option(selected= card.table === 'Neighborhoods', value='Neighborhoods') Neighborhoods
								option(selected= card.table === 'CityRegions', value='CityRegions') City Regions
								option(selected= card.table === 'Cities', value='Cities') Cities
								option(selected= card.table === 'ProvinceRegions', value='ProvinceRegions') Province Regions
								option(selected= card.table === 'Provinces', value='Provinces') Provinces
								option(selected= card.table === 'CountryRegions', value='CountryRegions') Country Regions
								option(selected= card.table === 'Countries', value='Countries') Countries
								option(selected= card.table === 'WorldRegions', value='WorldRegions') World Regions
								option(selected= card.table === 'Continents', value='Continents') Continents
					
				.col-xs-12.col-sm-6
					.form-group(duck-field='Id', duck-type='string')
						label Id of linked Existing Item (only use if Existing Item Type is being used)
							input.form-control(type='text', duck-value, value= card.Id)
				
			.form-group.duck-view-hidden(duck-field='title', duck-type='string')
				label Card Title (if linking to existing Item, this is optional)
					input.form-control(type='text', duck-value, value= card.title)

			label Card Description (if linking to existing Item, this is optional)
			.form-group.duck-view-hidden(duck-field='description', duck-type='wysiwyg')
				.summernote!= card.description

			.guide-card--img-wrapper.p-R.mtb-Sm
				.form-group(duck-field='image', duck-type='image')
					label Card Image Url (if linking to existing Item, this is optional)
						input.form-control(type='text', duck-value, value= card.image)
				if card.image
					img.guide-card--img(src= card.image, title= card.title || card.type)
			
			.row
				.col-xs-12.col-sm-6
					.form-group(duck-field='suggestedTime', duck-type='string')
						label Suggest Time
							input.form-control(type='text', duck-value, value= card.suggestedTime)

	button.btn.btn-danger.duck-view-hidden.p-A.b-Sm.r-Sm(duck-button='delete') Delete Card