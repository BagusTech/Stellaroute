-
	function tagBackground(type) {
		const types = {
			food: 'bg-Orange',
			activity: 'bg-Bl',
			area: false,
			sub: false,
			attraction: false,
			location: false,
			note: false,
			map: false
		};

		return types[type];
	}

	const tagBackgroundColor = tagBackground(card.type);

mixin editCard(day, card)
	.m-0(duck-field='days', duck-type='array', duck-only-edit)
		.m-0(duck-type='object', duck-key='title', duck-key-value= day.title)
			.m-0(duck-field='cards', duck-type='array', duck-only-edit)
				.m-0(duck-type='object', duck-key='cardId', duck-key-value= card.cardId)
					block

.guide-card(class= `guide-card__${card.type}`, data-position=`${i+1}.${j}`)
	if card.directionsTo && card.directionsTo[0] && card.directionsTo && (card.directionsTo[0].distance || card.directionsTo[0].time)
		+guideEditForm(guide)
			div(duck-current-value)
				each directionTo in card.directionsTo ? card.directionsTo : [{}]
					if directionTo.time || directionTo.distance
						.guide-card--directions
							span.directions--method(data-icon= getIcon(directionTo.method)): span.sr-only= directionTo.method
							span.directions--time= directionTo.time
							
							if directionTo.distance
								span.directions--distance= `// ${directionTo.distance}`
			if user && user.isAdmin
				+editCard(day, card)
					div(duck-field='directionsTo', duck-type='array')
						each directionTo in card.directionsTo
							.row(duck-type='object')
								.form-group.col-xs-4(duck-field='method', duck-type='select')
									select.form-control(duck-value)
										option(value='walk', selected= directionTo.method === 'walk') Walking
										option(value='car', selected= directionTo.method === 'car') Car or Taxi
										option(value='bicycle', selected= directionTo.method === 'bicycle') Bicycle
										option(value='subway', selected= directionTo.method === 'subway') Subway
										option(value='train', selected= directionTo.method === 'train') Train
										option(value='plane', selected= directionTo.method === 'plane') Plane
										option(value='bus', selected= directionTo.method === 'bus') Bus
										option(value='boat', selected= directionTo.method === 'boat') Boat
								.form-group.col-xs-4(duck-field='time', duck-type='string')
									input.form-control(type='text', duck-value, value= directionTo.time, placeholder='Time')
								.form-group.col-xs-4(duck-field='distance', duck-type='string')
									input.form-control(type='text', duck-value, value= directionTo.distance, placeholder='Distance')
	// alt styles for directions
	//if card.directionsTo && card.directionsTo[0] && card.directionsTo && (card.directionsTo[0].distance || card.directionsTo[0].time)
		each directionTo in card.directionsTo ? card.directionsTo : [{}]
			if directionTo.time || directionTo.distance
				.p-Lg.p-R
					.p-A.bg-W.bw-Sm.bs-S.bc-G.br-C(style='height: 33px; width: 33px; left: -41px; top: 21px;')
						i.p-A.l-0.ta-C(class=getIcon(directionTo.method), aria-hidden='true', style='top: 7px; width: 33px;')
						span.sr-only= directionTo.method							
						.p-Xs.p-A.l-100.t-0.ml-Md.bg-W.bw-Sm.bc-G.bs-S.test-test(style='white-space: nowrap;')
							span= directionTo.time
							
							if directionTo.distance
								span= ` // ${directionTo.distance}`

	.guide-card--content
		if tagBackgroundColor && card.tagTitle
			if user && user.isAdmin
				+guideEditForm(guide)
					.guide-card--tag(class= tagBackgroundColor): span(duck-current-value)= card.tagTitle
					+editCard(day, card)
						.form-group.bg-N.m-0(duck-field='tagTitle', duck-type='string')
							input.form-control(type='text', duck-value, value= card.tagTitle)
			else
				.guide-card--tag(class= tagBackgroundColor)= card.tagTitle

		if card.image
			.guide-card--img-wrapper(style= card.type === 'sub' && `background-image: url('${card.image}');`)
				if user && user.isAdmin
					+guideEditForm(guide)
						if card.type !== 'sub'
							img.guide-card--img(src= card.image, title= card.title || card.type)

						+editCard(day, card)
							.form-group(duck-field='image', duck-type='image')
								input.form-control(type='text', duck-value, value= card.image)
				else
					if card.type !== 'sub'
						img.guide-card--img(src= card.image, title= card.title || card.type)
		
		if card.title || wysiwygHasData(card.description)
			.guide-card--info
				if card.title
					if user && user.isAdmin
						.w-50.f-L
							+guideEditForm(guide)
								h2.guide-card--header(duck-current-value)= card.title
								+editCard(day, card)
									.form-group(duck-field='title', duck-type='string')
										input.form-control(type='text', duck-value, value= card.title)
					else
						h2.guide-card--header= card.title

				if user && user.isAdmin
					.p-R.w-50.f-L.ta-R
						+guideEditForm(guide)
							.pr-Lg.d-Ib
								h4.d-Ib Order&nbsp;
								span(duck-current-value)= card.order
							.m-0.d-Ib(duck-field='days', duck-type='array', duck-only-edit)
								.m-0.d-Ib(duck-type='object', duck-key='title', duck-key-value= day.title)
									.m-0.d-Ib(duck-field='cards', duck-type='array', duck-only-edit)
										.m-0.d-Ib(duck-type='object', duck-key='cardId', duck-key-value= card.cardId, style='vertical-align: middle;')
											.form-group.d-Ib.m-0.pr-Sm(duck-field='order', duck-type='number', style='vertical-align: middle;')
												input.form-control(type='number', duck-value, value= card.order)
					.clear
				if card.description !== '<p><br></p>' && card.description !== '<br>'
					if user && user.isAdmin
						+guideEditForm(guide)
							.guide-card--description(duck-current-value)!= card.description
							+editCard(day, card)
									.form-group(duck-field='description', duck-type='wysiwyg')
										.summernote!= card.description
					else
						.guide-card--description!= card.description

				if card.suggestedTime
					if user && user.isAdmin
						.guide-card--suggested-time(duck-current-value)
							| Suggested Time:&nbsp;
							.d-Ib(duck-table='Guides', duck-function='update', duck-key='Id', duck-key-value= guide.Id, duck-edit-form='view', style='vertical-align: middle;')
								strong(duck-current-value)= card.suggestedTime
								.d-Ib.m-0(duck-field='days', duck-type='array', duck-only-edit, style='vertical-align: middle;')
									.d-Ib.m-0(duck-type='object', duck-key='title', duck-key-value= day.title, style='vertical-align: middle;')
										.d-Ib.m-0(duck-field='cards', duck-type='array', duck-only-edit, style='vertical-align: middle;')
											.d-Ib.m-0(duck-type='object', duck-key='cardId', duck-key-value= card.cardId, style='vertical-align: middle;')
												.form-group.d-Ib.m-0(duck-field='suggestedTime', duck-type='string', style='vertical-align: middle;')
													input.form-control(type='text', duck-value, value= card.suggestedTime)
								button.btn.btn-warning.ml-Xs(duck-button='cancel') Cancel
								button.btn.btn-primary(duck-button='submit') Save
								button.btn.btn-edit.p-S(duck-button='edit', data-icon='fa fa-pencil')
					else
						p.guide-card--suggested-time
							| Suggested Time:&nbsp;	
							strong= card.suggestedTime
		else
			if user && user.isAdmin
				.p-A.t-Sm.l-Sm.ta-R.p-Sm.bg-W
					+guideEditForm(guide)
						.pr-Lg.d-Ib
							h4.d-Ib Order&nbsp;
							span(duck-current-value)= card.order
						.m-0.d-Ib(duck-field='days', duck-type='array', duck-only-edit)
							.m-0.d-Ib(duck-type='object', duck-key='title', duck-key-value= day.title)
								.m-0.d-Ib(duck-field='cards', duck-type='array', duck-only-edit)
									.m-0.d-Ib(duck-type='object', duck-key='cardId', duck-key-value= card.cardId, style='vertical-align: middle;')
										.form-group.d-Ib.m-0.pr-Sm(duck-field='order', duck-type='number', style='vertical-align: middle;')
											input.form-control(type='number', duck-value, value= card.order)