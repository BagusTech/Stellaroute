-
	var foodCategories = [
							'Only In',
							'Local Cuisine',
							'Best Dishes',
							'Drinks',
							'Restaurant',
							'Bar'
						]

if userIsAuthorized()
	.p-R
		button.btn.btn-primary.p-A.r-0.mt-NegXXl.b-XXl(data-target='#AddFood', data-toggle='modal') Add Food

	+modal('AddFood')(class='modal-lg')
		+contentCard('Add New Food Item')
			.row
				.col-xs-12(duck-table='Cities', duck-function='update', duck-key='Id', duck-key-value= city.Id)
					div(duck-field='food', duck-type='object')
						div(duck-field='foods', duck-type='array')
							div(duck-type='object', duck-key='Id')
								.form-group(duck-field='name', duck-type='string') <!-- name -->
									label(for='FoodName') Name
									input#FoodName.form-control(type='text', required, duck-value)

								.form-group <!-- image -->
									label(for='FoodImage') Image
										+image(null, 'image')

								.form-group(duck-field='category', duck-type='select') <!-- category -->
									label(for='FoodCategory') Category
									select#FoodCategory.form-control(duck-value)
										option Only In
										option Local Cuisine
										option Best Dishes
										option Drinks
										option Restaurant
										option Bar

								.form-group(duck-field='tagline', duck-type='string') <!-- tagline -->
									label(for='FoodTagline') Tagline
									input#FoodTagline.form-control(type='text', maxlength='130', duck-value)

								.form-group(duck-field='description', duck-type='wysiwyg')  <!-- description -->
									label(for='FoodDescription') Description
									.summernote

								.form-group(duck-field='contains', duck-type='checkbox') <!-- contains -->
									h3 Contains
									.checkbox
										label
											input(type='checkbox', value='Shellfish')
											| Shellfish
									.checkbox
										label
											input(type='checkbox', value='Gluten')
											| Gluten
									.checkbox
										label
											input(type='checkbox', value='Nuts')
											| Nuts
									.checkbox
										label
											input(type='checkbox', value='Meat')
											| Meat
									.checkbox
										label
											input(type='checkbox', value='Dairy')
											| Dairy

								.form-group(duck-field='dishes', duck-type='array') <!-- dishes -->
									label Dishes
									div
										.form-group.d-F.fai-C(duck-type='string', data-icon='fa fa-arrows-v')
											.ml-Sm.input.form-control(type='text', duck-value, value=dish)
											button.btn.btn-danger(duck-button='delete')
									.ta-R
										button.btn.btn-primary(duck-button='add') Add Dish

								.form-group(duck-field='area', duck-type='string') <!-- area -->
									label(for='FoodArea') Area
									input#FoodArea.form-control(type='text', duck-value)

								.form-group(duck-field='address', duck-type='string') <!-- address -->
									label(for='FoodAddress') Address
									input#FoodAddress.form-control(type='text', duck-value)

								.form-group(duck-field='whatToOrder', duck-type='string') <!-- what to order -->
									label(for='FoodWhatToOrder') What to Order
									input#FoodWhatToOrder.form-control(type='text', duck-value)

								.form-group(duck-field='suggestedRestaurant', duck-type='string') <!-- suggested restaurant -->
									label(for='FoodSuggestedRestaurant') Suggested Restaurant
									input#FoodSuggestedRestaurant.form-control(type='text', duck-value)

								.form-group(duck-field='readMore', duck-type='string') <!-- read more -->
									label(for='FoodReadMore') Read More
									input#FoodReadMore.form-control(type='text', duck-value)

					.ta-R
						button.btn.btn-primary(type='button', duck-button='submit') Add
						button.btn.btn-default.ml-Sm(type='button', data-toggle='modal', data-target='#AddFood') Cancel

if (city.food && city.food.foods)
	.row
		.col-xs-12.col-sm-4.col-md-3.col-lg-2(data-function='filter')
			div(data-function='stickey')
				div(data-stickey='content')
					.visible-xs
						button.btn.btn-default.w-100(data-function='toggle', data-target='[data-filter-section="food-category"]') Filter
					.hidden-xs.bg-W.bg-N--sm.p-Sm.p-N--sm(data-filter-section='food-category', data-toggle='hidden-xs')
						h2.mt-0.pt-Sm.ta-R--sm Category
						for category in foodCategories
							.checkbox.checkbox-right
								label
									span.hidden-xs= category
									input(type='checkbox', value= category)
									span.visible-xs= category

		.col-xs-12.col-sm-8.col-md-9.col-lg-10
			.masonry.masonry-grid-1.masonry-grid-3--md.masonry-grid-4--lg.pt-Sm
				for food in city.food.foods.filter((i) => i.name).sort(sortByOrder)
					.masonry--item(data-toggle='modal', data-target= `#${createValidAttributeFromTitle(food.name)}`, data-filter-food-category= food.category || 'Unknown')
						+card(food.image, food.name, food.category, foodTagColors[food.category], food.description)
else
	.content-card
		p.lead Sorry, but it appears that no food as been added for this city yet, please check back soon.
		p If you would like to help us fill out content for this area, please send us an email to <a href='mailto:info@stellaroute.com'>info@stellaroute.com</a> and we will get back to you shortly.
