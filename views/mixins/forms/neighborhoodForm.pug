- var neighborhoodFormId = 0

mixin neighborhoodForm(crud, neighborhood, locations, cancel)
	form(id=`NeighborhoodForm${neighborhoodFormId}`, duck-table='Neighborhoods', duck-function= crud, duck-key='Id', duck-key-value= neighborhood && neighborhood.Id)
		div(duck-field='names', duck-type='object')
			.w-50--sm.pr-Sm.f-L--sm(duck-field='display', duck-type='string')
				.form-group
					label Display Name
						input.form-control(type='text', required, duck-value, value= neighborhood && neighborhood.names.display)
			.w-50--sm.pl-Sm.f-L--sm(duck-field='official', duck-type='string')
				.form-group
					label Official Name
						input.form-control(type='text', required, duck-value, value= neighborhood && neighborhood.names.official)
			.c-B(duck-field='alias', duck-type='array')
				label Alias'
				for alias in neighborhood && neighborhood.names && neighborhood.names.alias ? neighborhood.names.alias : [null]
					.form-group(duck-type='string')
						input.form-control(type='text', required, duck-value, value= alias)

		if (!neighborhood)
			.form-group(duck-field='url', duck-type='string')
					label Url
						input.form-control(type='text', required, duck-value, disabled)

		.form-group(duck-field='tagline', duck-type='string')
			label Tagline
				input.form-control(type='text', duck-value, value= neighborhood && neighborhood.tagline)

		div(duck-field='description', duck-type='wysiwyg')
			label Neighborhood Description
			.summernote!= neighborhood && neighborhood.description

		.form-group(duck-field='cardImage', duck-type='string')
			label Card Image
				input.form-control(type='text', required, duck-value, value= neighborhood && neighborhood.cardImage)

		.form-group(duck-field='backgroundImage', duck-type='string')
			label Background Image
				input.form-control(type='text', required, duck-value, value= neighborhood && neighborhood.backgroundImage)

		div(duck-field='images', duck-type='array')
			h3 Images
			for image in neighborhood && neighborhood.images ? neighborhood.images : [null]
				.form-group(duck-type='string')
					input.form-control(type='string', duck-value, value= image)

		div(duck-field='orientation', duck-type='object')
			h3 Orientation
			.form-group(duck-field='description', duck-type='wysiwyg')
				label Overview
				.summernote!= neighborhood && neighborhood.orientation && neighborhood.orientation.description

			.form-group(duck-field='map', duck-type='string')
				label Map
					input.form-control(type='text', duck-value, value= neighborhood && neighborhood.orientation && neighborhood.orientation.map)

			.form-group(duck-field='waysToGetThere', duck-type='array')
				h4 Ways to Get There
				for wayToGetThere in neighborhood && neighborhood.orientation && neighborhood.orientation.waysToGetThere ? neighborhood.orientation.waysToGetThere : [{}]
					div(duck-type='object')
						.form-group(duck-field='name', duck-type='string')
							label Name
								input.form-control(type='text', duck-value, value= wayToGetThere.name)
						.form-group(duck-field='method', duck-type='select')
							label Method of Transportation
								select.form-control(duck-value)
									option(value='walk', selected= wayToGetThere.method === 'walk') Walking
									option(value='car', selected= wayToGetThere.method === 'car') Car or Taxi
									option(value='bicycle', selected= wayToGetThere.method === 'bicycle') Bicycle
									option(value='subway', selected= wayToGetThere.method === 'subway') Subway
									option(value='train', selected= wayToGetThere.method === 'train') Train
									option(value='plane', selected= wayToGetThere.method === 'plane') Plane
									option(value='bus', selected= wayToGetThere.method === 'bus') Bus
									option(value='boat', selected= wayToGetThere.method === 'boat') Boat
						div(duck-field='stops', duck-type='array')
							label Stops
							for stop in wayToGetThere.stops ? wayToGetThere.stops : [null]
								.form-group(duck-type='string')
									input.form-control(type='text', duck-value, value= stop)

			.form-group(duck-field='mainIntersection', duck-type='wysiwyg')
				label Main Intersection
				.summernote!= neighborhood && neighborhood.orientation && neighborhood.orientation.mainIntersection

			.form-group(duck-field='mainStrip', duck-type='wysiwyg')
				label Main Strip
				.summernote!= neighborhood && neighborhood.orientation && neighborhood.orientation.mainStrip

			div(duck-field='distanceFrom', duck-type='array')
				h4 Distance From
				for distanceFrom in neighborhood && neighborhood.orientation && neighborhood.orientation.distanceFrom ? neighborhood.orientation.distanceFrom : [{}]
					.row(duck-type='object')
						.col-xs-2.form-group(duck-field='order', duck-type='number')
							label Order
								input.form-control(type='number', duck-value, value= distanceFrom.order)
						.col-xs-10.form-group(duck-field='name', duck-type='string')
							label Name of Location
								input.form-control(type='text', duck-value, value= distanceFrom.name)
						.col-xs-12.form-group(duck-field='type', duck-type='select')
							label Type of Location
								select.form-control(duck-value)
									option(value='airport', selected= distanceFrom.type === 'airport') Airport
									option(value='attraction', selected= distanceFrom.type === 'attraction') Attraction
									option(value='station', selected= distanceFrom.type === 'station') Station
						.col-xs-12(duck-field='waysToGetThere', duck-type='array')
							h5 Ways to Get There
							for wayToGetThere in distanceFrom.waysToGetThere ? distanceFrom.waysToGetThere : [{}]
								div(duck-type='object')
									.form-group(duck-field='method', duck-type='string')
										label Method of Transportation
											select.form-control(duck-value)
												option(value='walk', selected= wayToGetThere.method === 'walk') Walking
												option(value='car', selected= wayToGetThere.method === 'car') Car or Taxi
												option(value='bicycle', selected= wayToGetThere.method === 'bicycle') Bicycle
												option(value='subway', selected= wayToGetThere.method === 'subway') Subway
												option(value='train', selected= wayToGetThere.method === 'train') Train
												option(value='plane', selected= wayToGetThere.method === 'plane') Plane
												option(value='bus', selected= wayToGetThere.method === 'bus') Bus
												option(value='boat', selected= wayToGetThere.method === 'boat') Boat
									.form-group(duck-field='distance', duck-type='string')
										label Distance from Location
											input.form-control(type='text', duck-value, value= wayToGetThere.distance)
									.form-group(duck-field='time', duck-type='string')
										label Time
											input.form-control(type='text', duck-value, value= wayToGetThere.time)
									.form-group(duck-field='description', duck-type='wysiwyg')
										label Description
										.summernote!= wayToGetThere.description


		div(duck-field='needToKnow', duck-type='array')
			h3 Need To Know
			for advice in neighborhood && neighborhood.needToKnow ? neighborhood.needToKnow : [{}]
				.row(duck-type='object')
					h4 Advice
					.form-group.col-xs-10(duck-field='title', duck-type='string')
						label Title
							input.form-control(type='text', duck-value, value= advice.title)
					.form-group.col-xs-2(duck-field='order', duck-type='number')
						label Order
							input.form-control(type='number', duck-value, value= advice.order)
					.form-group.col-xs-12(duck-field='description', duck-type='wysiwyg')
						label Advice
						.summernote!= advice.description

		div(duck-field='eatingDrinking', duck-type='object')
			h4 Eating and Drinking
			.form-group(duck-field='image', duck-type='string')
				label Image
					input.form-control(type='text', duck-value, value= neighborhood && neighborhood.eatingDrinking && neighborhood.eatingDrinking.image)
			.form-group(duck-field='description', duck-type='wysiwyg')
				label What to Know About Eating and Drinking
				.summernote!= neighborhood && neighborhood.eatingDrinking && neighborhood.eatingDrinking.description

		div(duck-field='shopping', duck-type='object')
			h4 Shopping
			.form-group(duck-field='image', duck-type='string')
				label Image
					input.form-control(type='text', duck-value, value= neighborhood && neighborhood.shopping && neighborhood.shopping.image)
			.form-group(duck-field='description', duck-type='wysiwyg')
				label What to Know About Shopping
				.summernote!= neighborhood && neighborhood.shopping && neighborhood.shopping.description

		div(duck-field='quickFacts', duck-type='array')
			h3 Quick Facts
			for advice in neighborhood && neighborhood.quickFacts ? neighborhood.quickFacts : [{}]
				.row(duck-type='object')
					h4 Fact
					.form-group.col-xs-10(duck-field='title', duck-type='string')
						label Title
							input.form-control(type='text', duck-value, value= advice.title)
					.form-group.col-xs-2(duck-field='order', duck-type='number')
						label Order
							input.form-control(type='number', duck-value, value= advice.order)
					.form-group.col-xs-12(duck-field='description', duck-type='wysiwyg')
						label Fact
						.summernote!= advice.description

		div(duck-field='explore', duck-type='object')
			h3 Where to Explore
			.form-group(duck-field='map', duck-type='string')
				label Map
					input.form-control(type='text', duck-value, value= neighborhood && neighborhood.explore && neighborhood.explore.map)
			div(duck-field='areas', duck-type='array')
				label Areas
				for area in neighborhood && neighborhood.explore && neighborhood.explore.areas ? neighborhood.explore.areas : [{}]
					div(duck-type='object')
						h5 Area
						.form-group(duck-field='name', duck-type='string')
							label Name / Location / Cross Street
								input.form-control(type='text', duck-value, value= area.name)
						.form-group(duck-field='description', duck-type='wysiwyg')
							label Description
							.summernote!= area.description
						div(duck-field='suggestedSpots', duck-type='array')
							h5 Suggested Spots
							for spot in area.suggestedSpots ? area.suggestedSpots : [{}]
								div(duck-type='object')
									.form-group(duck-field='name', duck-type='string')
										label Name
											input.form-control(type='text', duck-value, value= spot.name)
									.form-group(duck-field='link', duck-type='string')
										label Link
											input.form-control(type='text', duck-value, value= spot.link)
									.form-group(duck-field='type', duck-type='select')
										label Type
											select.form-control(duck-value)
												option(value='restaurant', selected= spot.type === 'restaurant') Restaurant
												option(value='bar', selected= spot.type === 'bar') Bar
												option(value='store', selected= spot.type === 'store') Store
												option(value='other', selected= spot.type === 'other') Other

		div(duck-field='nearbyNeighborhoods', duck-type='array')
			h3 Nearby Neighborhoods
			for nearbyNeighborhood in neighborhood && neighborhood.nearbyNeighborhoods ? neighborhood.nearbyNeighborhoods : [null]
				.form-group(duck-type='string')
					input.form-control(type='text', duck-value, value= nearbyNeighborhood)

		div(duck-field='notiblePlaces', duck-type='array')
			h3 Notible Places
			for place in neighborhood && neighborhood.notiblePlaces ? neighborhood.notiblePlaces : [{}]
				div(duck-type='object')
					.form-group(duck-field='name', duck-type='string')
						label Name
							input.form-control(type='text', duck-value, value= place.name)
					.form-group(duck-field='image', duck-type='string')
						label Image
							input.form-control(type='text', duck-value, value= place.image)
					.form-group(duck-field='address', duck-type='wysiwyg')
						label Address
						.summernote!= place.address
					.form-group(duck-field='description', duck-type='wysiwyg')
						label description
						.summernote!= place.description

		if locations && locations.city
			.form-group.hidden(duck-field='city', duck-type='string')
				input(type='text', required, duck-value, value=locations.city, disabled)
		else if neighborhood && neighborhood.city
			.form-group.hidden(duck-field='city', duck-type='string')
				input(type='text', required, duck-value, value=neighborhood.city, disabled)

		if locations && locations.cityRegions
			.form-group.hidden(duck-field='cityRegions', duck-type='array')
				for cityRegions in locations.cityRegions
					input(type='text', required, duck-value, value=cityRegions, disabled)
		else if neighborhood && neighborhood.cityRegions
			.form-group.hidden(duck-field='cityRegions', duck-type='array')
				for cityRegions in neighborhood.cityRegions
					input(type='text', required, duck-value, value=cityRegions, disabled)

		.ta-R
			if neighborhood
				+deleteForm('Neighborhoods', neighborhood.Id)(class='mr-Xs')

			button.btn.btn-primary(type='button', duck-button='submit')= neighborhood ? 'Update' : 'Add'
			!= cancel

	- neighborhoodFormId++