mixin cardStyle1(item)
	.masonry--item(data-toggle="modal" data-target=`#${item.name && item.name.replace(/\s/g, '-')}`)
		.masonry--tag(style='border-radius: 2px 2px 0 0;', class=item.category && item.category.replace(/\s/g, '-'))= item.category
		.content-card(style='border-radius: 2px 0 2px 2px;')
			.o-H
				img.masonry--cover-img(src=item.image, alt=item.name, style='border-radius: 2px 0 2px 2px;')
			h3.m-0.p-A.b-0.l-0.r-0.bg-Dkst.p-Sm.fc-W.fw-N(style='border-radius: 0 0 2px 2px;')= item.name

mixin cardStyle2(item)
	.masonry--item(data-toggle="modal", data-target=`#${item.name && item.name.replace(/\s/g, '-')}`)
		.masonry--tag(class=item.category && item.category.replace(/\s/g, '-'))= item.category
		.content-card(style='border-radius: 2px 0 2px 2px;')
			.o-H
				img.masonry--cover-img(src=item.image, alt=item.name, style='border-radius: 2px 0 2px 2px;')
			h3.m-0.p-Sm.fc-Purp(style='border-radius: 0 0 2px 2px;')= item.name
			.plr-Sm!= item.description

mixin modalStyle1(item, i)
	.modal.fade(tabindex="-1", role="dialog", aria-labelledby="myModalLabel", id=item.name && item.name.replace(/\s/g, '-'))
		.modal-dialog
			.content-card
				.js-food-item
					h2.content-card--header.fw-B.fc-B= item.name
					.lead!= item.description
					img.w-100(src= item.image, alt= item.name)
					if (item.suggestedRestaurant)
						h3 Best Place to Get it:
						p!= item.suggestedRestaurant

					if (item.dishes)
						h3 Dishes
						ul
							for dish in item.dishes
								li= dish

					if (item.whatToOrder)
						h3 What to Have
						p= item.whatToOrder

					if (item.address)
						h3 Where is It?
						address
							span= item.address
							span= item.area

					if (item.blog)
						a.btn.btn-secondary.btn-lg.mt-Sm(href=item.blog) Read More

				if user && user.isAdmin
					.js-update-food-item.hidden
						.row
							.col-xs-10
								.form-group
									label(for=`FoodName${i}`) Name
									input.form-control.js-food-field(type='text', required, name='name', value=item.name, id= `FoodName${i}`)
							.col-xs-2
								.form-group
									label(for=`FoodName${i}`) Order
									input.form-control.js-food-field(type='number', required, name='order', value=item.order || 0, id= `FoodName${i}`)
						.form-group
							label(for=`FoodImage${i}`) Image
							input.form-control.js-food-field(type='text', required, name='image', value=item.image, id= `FoodImage${i}`)
						.form-group
							label(for=`FoodCategory${i}`) Category
							select.form-control.js-food-field(name='category', id= `FoodCategory${i}`)
								option(selected= item.category === 'Only In') Only In
								option(selected= item.category === 'Local Cuisine') Local Cuisine
								option(selected= item.category === 'Best Dishes') Best Dishes
								option(selected= item.category === 'Drinks') Drinks
								option(selected= item.category === 'Restaurant') Restaurant
						.form-group
							label(for=`FoodTagline${i}`) Tagline
							input.form-control.js-food-field(type='text', maxlength='130', name='tagline', id= `FoodTagline${i}`)
						.form-group
							label(for=`FoodDescription${i}`) Description
							.js-food-field(name='description', data-summernote, id= `FoodDescription${i}`)
								.summernote!= item.description

						.form-group
							h3 Contains
							.checkbox
								label
									input.js-food-field(name='contains', type='checkbox', value='Shellfish', checked= item.contains && item.contains.indexOf('Shellfish') > -1)
									| Shellfish
							.checkbox
								label
									input.js-food-field(name='contains', type='checkbox', value='Gluten', checked= item.contains && item.contains.indexOf('Gluten') > -1)
									| Gluten
							.checkbox
								label
									input.js-food-field(name='contains', type='checkbox', value='Nuts', checked= item.contains && item.contains.indexOf('Nuts') > -1)
									| Nuts
							.checkbox
								label
									input.js-food-field(name='contains', type='checkbox', value='Meat', checked= item.contains && item.contains.indexOf('Meat') > -1)
									| Meat
							.checkbox
								label
									input.js-food-field(name='contains', type='checkbox', value='Dairy', checked= item.contains && item.contains.indexOf('Dairy') > -1)
									| Dairy

						.form-group
							label(for=`FoodDishes${i}`) Dishes
							input.form-control.js-food-field(type='text', name='dishes', value= item.dishes && item.dishes.join(', '), id= `FoodDishes${i}`)
						.form-group
							label(for=`FoodArea${i}`) Area
							input.form-control.js-food-field(type='text', name='area', value= item.area, id= `FoodArea${i}`)
						.form-group
							label(for=`FoodAddress${i}`) Address
							input.form-control.js-food-field(type='text', name='address', value= item.address, id= `FoodAddress${i}`)
						.form-group
							label(for=`FoodWhatToOrder${i}`) What to Order
							input.form-control.js-food-field(type='text', name='whatToOrder', value= item.whatToOrder, id= `FoodWhatToOrder${i}`)
						.form-group
							label(for=`FoodSuggestedRestaurant${i}`) Suggested Restaurant
							input.form-control.js-food-field(type='text', name='suggestedRestaurant', value= item.suggestedRestaurant, id= `FoodSuggestedRestaurant${i}`)
						.form-group
							label(for=`FoodReadMore${i}`) Read More
							input.form-control.js-food-field(type='text', name='readMore', value= item.readMore, id= `FoodReadMore${i}`)
					hr

					.row
						.col-xs-6
							button.btn.btn-primary.js-edit-food Edit
							button.btn.btn-primary.js-edit-food-submit.hidden.ml-Sm Save
						.col-xs-6.ta-R
							button.btn.btn-danger.js-delete-food-submit.hidden.mr-Sm Delete
							button.btn.btn-danger.js-delete-food Delete
					input.js-food-id(type='hidden', value=item.Id)



				//hr

				//h3 Pics
					small testing instagram
					#DeepDish

mixin masonry(items, masonryClasses, altCard)
	if(items)
		.masonry(class=masonryClasses.split('.'))
			if(altCard)
				for item in items
					+cardStyle2(item)
			else
				for item in items
					+cardStyle1(item)
		
		for item, i in items
			+modalStyle1(item, i)
	-console.log('~~')