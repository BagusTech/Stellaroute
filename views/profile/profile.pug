extends ../layout.pug

block content
	if user && isMe
		#NewGuide.modal.fade(tabindex='-1', role='dialog')
			.modal-dialog.modal-lg
				.modal-content(duck-table='Guides', duck-key='Id', duck-function='add')
					.modal-header
						button.close(data-dismiss='modal') &times;
						h4.modal-title New Guide
					.modal-body
						.form-horizontal
							.hidden(duck-type='string', duck-field='author')
								input(type='text', duck-value, value=user.Id)
							.form-group(duck-type='object', duck-field='names')
								label.col-sm-2.control-label Name
								.col-sm-10(duck-type='string', duck-field='display')
									input.form-control(duck-value)

							.form-group(duck-field='url', duck-type='string')
								label.col-sm-2.control-label Url
								.col-sm-10
									.input-group
										input.form-control(type='text', required, duck-value)
										.input-group-addon
											small (only edit if you have to)
									
								script(src='/components/validateForm/specialValidation/guideUrl.min.js')

							.form-group(duck-type='string', duck-field='tagline')
								label.col-sm-2.control-label Tagline
								.col-sm-10
									input.form-control(duck-value)

							.form-group(duck-type='image', duck-field='bannerImage')
								label.col-sm-2.control-label Banner Image
								.col-sm-10
									input.hidden(type='hidden', duck-value)
									.form-control(duck-button='image-select')
										i.fa.fa-image(aria-hidden='true')
										span.pl-Sm(duck-image-value) Please select an Image

							.form-group(duck-type='image', duck-field='cardImage')
								label.col-sm-2.control-label Card Image
								.col-sm-10
									input.hidden(type='hidden', duck-value)
									.form-control(duck-button='image-select')
										i.fa.fa-image(aria-hidden='true')
										span.pl-Sm(duck-image-value) Please select an Image

					.modal-footer
						button.btn.btn-default(data-dismiss='modal') Close
						button.btn.btn-primary(duck-button='submit') Save #[i.fa.fa-spinner.fa-spin.hidden(aria-hidden='true')]
	.profile
		.sub-header(style=`background: rgba(0, 0, 0, 0) url("${ userProfile.bannerImage ? getImagePath(userProfile.bannerImage, 'large') : '/images/profile_header_image_mirrored.jpg'}") no-repeat scroll center 57% / cover;`)
			.container.pb-0
				.row.pt-Sm.pt-Md--md.pt-Lg--lg
					.col-xs-2.col-sm-3.col-md-2.col-lg-1
						img.img-circle.img-responsive.bw-Md.bs-S.bc-W(src= userProfile.profilePicture ? getImagePath(userProfile.profilePicture, 'thumb2') : '/images/profile_placeholder_360.jpg', alt='profile picture')
					.col-xs-10.col-sm-9.col-md-10.col-lg-11
						h1= userProfile.name ? userProfile.name.first : userProfile.username || 'unkown name, very mysterious'

						if userProfile.tagline
							p.fc-W.bg-Dkr.p-Sm.d-Ib= userProfile.tagline

						nav.tabbed-nav.pl-0.mt-Lg--md(data-tabs='controls')
							a.tabbed-nav--tab(href='#MyGuides', role='tab', aria-expanded='true') Guides
							a.tabbed-nav--tab(href='#MyWishlist', role='tab', aria-expanded='false') Wishlist
							if wysiwygHasData(userProfile.description)
								a.tabbed-nav--tab(href='#AboutMe', role='tab', aria-expanded='false') About Me
							if isMe
								a.tabbed-nav--tab(href='#MySettings', role='tab', aria-expanded='false') My Settings

		.container
			.mb-Sm.ta-R
				.share42init
			div(data-function='tabs')
				#MyGuides.tabbed-nav--tabpanel(role='tabpanel', aria-hidden='false')
					if user && isMe
						.p-R
							button.hidden-xs.btn-primary.p-A.b-Sm(data-toggle='modal', data-target='#NewGuide') New Guide
					.row
						.col-xs-12.col-sm-4.col-md-3.col-lg-2.stickey(data-function='filter')
							.visible-xs
								button.btn.btn-default.w-100(data-function='toggle', data-target='#GuideFilter') Filter
							#GuideFilter.hidden-xs.bg-W.bg-N--sm.p-Sm.p-N--sm(data-toggle='hidden-xs')
								div(data-filter-section='country')
									h2.mt-0.pt-Sm.ta-R--sm Country
									for country in countries
										.checkbox.checkbox-right
											label
												span.hidden-xs= country
												input(type='checkbox', value= country)
												span.visible-xs= country

						.col-xs-12.col-sm-8.col-md-9.col-lg-10
							.masonry.masonry-grid-1.masonry-grid-3--md.masonry-grid-4--lg
								for guide in guides ? guides.filter((_guide) => isMe || _guide.isPublished) : []
									.masonry--item(data-filter-country= guide.countriesDisplay && guide.countriesDisplay.join('|') || 'Unknown', class= guide.isPublished ? '' : 'bc-R bw-Md bs-S')
										a(href=`/${userProfile.username || userProfile.Id}/${guide.url}`)
											+card(guide.cardImage, guide.names.display)
								else
									p.lead No guides created yet!
				#MyWishlist.tabbed-nav--tabpanel(role='tabpanel', aria-hidden='true')
					p.lead Wishlist coming soon!
					//	if favorites && favorites.length
							.masonry.masonry-grid-1.masonry-grid-3--md.masonry-grid-4--lg
								for guide in favorites ? favorites : []
									.masonry--item
										a(href=`/${userProfile.username || userProfile.Id}/${guide.url}`)
											+card(guide.cardImage, guide.names.display)
						else
							p.lead Nothing on the wishlist yet!
				if wysiwygHasData(userProfile.description)
					#AboutMe.tabbed-nav--tabpanel(role='tabpanel', aria-hidden='true')
						.panel.panel-default
							.panel-body!=userProfile.description
				if user && isMe
					#MySettings.tabbed-nav--tabpanel(role='tabpanel', aria-hidden='true')
						.panel.panel-default(duck-table='Users', duck-function='update', duck-key='Id', duck-key-value=user.Id)
							.panel-heading My Settings
							.panel-body
								.row(duck-field='name', duck-type='object')
									.col-xs-12.col-sm-6
										.form-group(duck-field='first', duck-type='string')
											label First Name
												input.form-control(type='text', value= user.name && user.name.first, duck-value)
									.col-xs-12.col-sm-6
										.form-group(duck-field='last', duck-type='string')
											label Last Name
												input.form-control(type='text', value= user.name && user.name.last, duck-value)
									

								.form-group(duck-field='username', duck-type='string')
									label Username
										input.form-control(type='text', value= user.username, duck-value)

								.row(duck-field='local', duck-type='object')
									.col-xs-12
										.form-group(duck-field='email', duck-type='string')
											label Email
												input.form-control(type='email', value= user.local && user.local.email, duck-value)
								.row
									.col-xs-12.col-sm-6
										.form-group(duck-field='profilePicture', duck-type='image')
											.hidden
												input(type='text', value= user.profilePicture, duck-value)
											label Profile Picture
												.form-control(duck-button='image-select')
													i.fa.fa-image(aria-hidden='true')
													span.pl-Sm(duck-image-value)= user.profilePicture || 'Please select an Image'
									.col-xs-12.col-sm-6
										.form-group(duck-field='bannerImage', duck-type='image')
											.hidden
												input(type='text', value= user.bannerImage, duck-value)
											label Banner Image
												.form-control(duck-button='image-select')
													i.fa.fa-image(aria-hidden='true')
													span.pl-Sm(duck-image-value)= user.bannerImage || 'Please select an Image'

								.form-group(duck-field='tagline', duck-type='string')
									label Tagline
										input.form-control(type='text', value= user.tagline, duck-value)

								.form-group(duck-field='description', duck-type='wysiwyg')
									label About Me
									.summernote!= user.description

							.panel-footer.text-right
								button.btn.btn-default(data-toggle='modal', data-target='#ChangePassword') Change Password
								button.btn.btn-primary(duck-button='submit') Save
									i.fa.fa-spin.fa-spinner.hidden
					
					#ChangePassword.modal.fade(tabindex="-1", role="dialog")
						.modal-dialog
							.modal-content(duck-table='Users', duck-function='update', duck-key='Id', duck-key-value=user.Id)
								.modal-header
									button.close(data-dismiss='modal') &times;
									h4.modal-title Change Password
								.modal-body(duck-type='object', duck-field='local')
									.form-group(duck-field='password', duck-type='password')
										label New Password
											input.form-control(type='password', duck-value)
										span.help-block Password must be at least 5 characters long.
									.form-group
										label Confirm New Password
											input.form-control(type='password')
								.modal-footer
									button.btn.btn-default(data-dismiss='modal', type='button') Cancel
									button.btn.btn-primary(duck-button='submit', type='submit') Save
										i.fa.fa-spin.fa-spinner.hidden


					script(type='text/javascript' src='/js/pages/profile.min.js')
//- user
		Id
		name
			first
			list
		username
		local
			email
			password
		profilePicture
		bannerImage
		friends
		favorites
		following
		tagline
		description